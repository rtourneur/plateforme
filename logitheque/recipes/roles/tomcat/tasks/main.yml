---
# tasks file for tomcat component

  # launch the container for Tomcat
- name: launch Tomcat container
  docker:
    #  Container name depends on environment
    name: "{{component_full_name}}"
    image: "{{image}}"
    state: started
    
    # ports will be mapped depending on target environment
    #TODO faire une boucle
    ports:
    - "{{ports.tomcat.host}}:{{ports.tomcat.container}}"
    - "{{ports.ssh.host}}:{{ports.ssh.container}}"
    
    # linking with database. 
    #TODO faire une boucle
    links:
    - "{{link.container}}_{{application}}_{{env}}:{{link.alias}}"
    docker_api_version: 1.18
  tags: [tomcatComponent]
  # notify handler : set write permission to Tomcat's autodeploy directory
  notify: 
  - set credentials for webapps directory
 
- name: get application war file 
  # get the war file to inject, from Jenkins data. Put it in a temporary place for later deployment
  fetch :
    # Get the war file from {{project_home_dir}}
    src: "{{project_home_dir}}/{{appserver.path}}/{{appserver.war}}"
    #TODO use project/application in the name to make it more unique
    dest: "{{temp_folder}}/"
    flat: yes
  tags: [tomcatComponent]
