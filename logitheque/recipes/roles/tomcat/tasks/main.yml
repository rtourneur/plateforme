---
# tasks file for tomcat component

# On CentOs, open the port in the firewall to allow accessing the service
- name: open ssh port in firewall
  firewalld:
    zone: public
    permanent: true
    immediate: true 
    state: enabled
    port: "{{item}}/tcp"
  with_items:
  - "{{tomcat_http_port}}"
  - "{{tomcat_ssh_port}}"    
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"
  become: yes
  become_method: sudo
  tags: [tomcatComponent]
  
  # launch the container for Tomcat
- name: launch Tomcat container
  docker:
    #  Container name depends on environment
    name: "tomcat_{{env}}"
    image: "polymont/tomcat:8"
    state: started
    
    # ports will be mapped depending on target environment
    ports:
    - "{{tomcat_http_port}}:8080"
    - "{{tomcat_ssh_port}}:22"
    
    # linking with database. 
    # This won't be hardwired in the future (assembly depends on the project !)
    links:
    - "mysql_{{env}}:formation" 
    docker_api_version: 1.18
  tags: [tomcatComponent]
 
- name: get application war file 
# get the war file to inject, from Jenkins data
  fetch :
    # aller chercher le war dans {{jenkins_home_dir}}
    src: "{{jenkins_home_dir}}/workspace/{{application}}/{{war_path}}/{{war_name}}"
    #TODO use project/application in the name to make it more unique
    dest: "/tmp/{{env}}/{{war_name}}"
  tags: [tomcatComponent]
