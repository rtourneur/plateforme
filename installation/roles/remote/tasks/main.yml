---
# tasks file for platform's remote component image
- name: create docker-image directory for remote
  file:
    path: "{{remote_dir}}"
    state: directory
  tags: [remote]

- name: copy remote dockerfile
  template:
    src: Dockerfile
    dest: "{{remote_dir}}/Dockerfile"
  notify:
    - stop remote container
    - check or build remote image
  tags: [remote]

- stat: path="{{remote_dir}}/id_rsa"
  register: remote_id_rsa
  tags: [remote]

# when 'generated' flag is present, copy rsa keys for enabling ssh connections
- name: copy ssh keys to remote role
  command: cp -u ~/.ssh/id_rsa {{remote_dir}}
  notify:
    - stop remote container
    - check or build remote image
  when: generated.stdout == "true" or remote_id_rsa.stat.exists == False
  tags: [remote]

- name: create remote image
  docker_image: 
    path: "{{remote_dir}}" 
    name: "polymont/remote" 
    state: present
  tags: [remote]

- name: run remote container
  docker:
    name: remote
    image: "polymont/remote"
    state: started 
    stdin_open: yes
    ports:
    - "{{remote_ssh_port}}:22"
    volumes: 
    - "{{scripts_dir}}:/opt/scripts"
    docker_api_version: 1.18
  tags: [remote, start]
